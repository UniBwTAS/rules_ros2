""" Builds launch.
"""

load("@rules_python//python:defs.bzl", "py_library")
load("@rules_ros2_pip_deps//:requirements.bzl", "requirement")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@com_github_mvukov_rules_ros2//ros2:ament.bzl", "ros2_resource")

py_library(
    name = "launch",
    srcs = glob(["launch/launch/**/*.py"]),
    data = glob(["launch/share/**"]),
    imports = ["launch"],
    visibility = ["//visibility:public"],
    deps = [
        "@osrf_pycommon",
        "@ros2_ament_index//:ament_index_python",
        requirement("lark_parser"),
    ],
)

py_library(
    name = "launch_pytest",
    srcs = glob(["launch_pytest/launch_pytest/**/*.py"]),
    imports = ["launch_pytest"],
    visibility = ["//visibility:public"],
    deps = [
        ":launch",
        ":launch_testing",
        "@osrf_pycommon",
        "@ros2_ament_index//:ament_index_python",
        requirement("pytest"),
        requirement("pyyaml"),
    ],
)

py_library(
    name = "launch_testing",
    srcs = glob(["launch_testing/launch_testing/**/*.py"]),
    imports = ["launch_testing"],
    visibility = ["//visibility:public"],
    deps = [
        ":launch",
        "@osrf_pycommon",
        "@ros2_ament_index//:ament_index_python",
        requirement("pytest"),
    ],
)

# generate entry_points.txt with content:
# [launch.frontend.parser]
# xml = launch_xml:Parser
write_file(
    name = "xml_parser_entry_point",
    content = [
        "[launch.frontend.parser]",
        "xml = launch_xml:Parser",
    ],
    out = "launch_xml/launch_xml-1.0.7.egg-info/entry_points.txt",
    visibility = ["//visibility:public"],
)

py_library(
    name = "launch_xml",
    srcs = glob(["launch_xml/launch_xml/**/*.py"]),
    imports = ["launch_xml"],
    visibility = ["//visibility:public"],
    deps = [
        ":launch",
    ],
    data = [
        ":xml_parser_entry_point",
    ],
)

# generate entry_points.txt with content:
# [launch.frontend.parser]
# yaml = launch_yaml:Parser
write_file(
    name = "yaml_parser_entry_point",
    content = [
        "[launch.frontend.parser]",
        "yaml = launch_yaml:Parser",
    ],
    out = "launch_yaml/launch_yaml-1.0.7.egg-info/entry_points.txt",
    visibility = ["//visibility:public"],
)

ros2_resource(
    name = "frontend_resources",
    srcs = glob(["launch/share/launch/frontend/**"]),
    package_name = "launch",
    destination = "frontend",
    visibility = ["//visibility:public"],
)

py_library(
    name = "launch_yaml",
    srcs = glob(["launch_yaml/launch_yaml/**/*.py"]),
    imports = ["launch_yaml"],
    visibility = ["//visibility:public"],
    deps = [
        ":launch",
    ],
    data = [
        ":yaml_parser_entry_point",
    ],
)
